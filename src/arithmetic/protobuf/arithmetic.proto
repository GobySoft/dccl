// Copyright 2011-2018:
//   GobySoft, LLC (2013-)
//   Massachusetts Institute of Technology (2007-2014)
//   Community contributors (see AUTHORS file)
// File authors:
//   Toby Schneider <toby@gobysoft.org>
//   Chris Murphy <cmurphy@aphysci.com>
//
//
// This file is part of the Dynamic Compact Control Language Library
// ("DCCL").
//
// DCCL is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 2.1 of the License, or
// (at your option) any later version.
//
// DCCL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with DCCL.  If not, see <http://www.gnu.org/licenses/>.
syntax = "proto2";
import "dccl/option_extensions.proto";

package dccl.arith.protobuf;

message ArithmeticModel
{
  required string name = 1;
  
  repeated uint32 frequency = 10; // frequency of the symbol given by the repeated field index
                                 // probability is (frequency / sum(frequency)) 
  optional uint32 eof_frequency = 11 [default = 1]; // frequency of EOF symbol
  optional uint32 out_of_range_frequency = 12 [default = 0]; // frequency of the out-of-range value, that is, the value not within the range defined by [symbol_to_value(0), maximum_value). This *may* be zero, in this case, out of range values end encoding and return EOF there.
  
  repeated double value_bound = 20; // set of bounds of value in double space that maps to symbol given by repeated field index; upper bound is given by lower bound of the next symbol. Size must be size(frequency) + 1 (number of symbols + 1).

  optional bool is_adaptive = 30 [default = false];
  
}
