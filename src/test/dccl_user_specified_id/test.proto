// Copyright 2019-2022:
//   GobySoft, LLC (2013-)
//   Community contributors (see AUTHORS file)
// File authors:
//   Toby Schneider <toby@gobysoft.org>
//
//
// This file is part of the Dynamic Compact Control Language Library
// ("DCCL").
//
// DCCL is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 2.1 of the License, or
// (at your option) any later version.
//
// DCCL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with DCCL.  If not, see <http://www.gnu.org/licenses/>.
@PROTOBUF_SYNTAX_VERSION@
import "dccl/option_extensions.proto";
package dccl.test;

message TestMessageA
{
    // can be anything; will be overwritten by UserCustomIdCodec
    option (dccl.msg).id = 127;
    option (dccl.msg).max_bytes = 2;
    option (dccl.msg).codec_version = 4;
  
    required uint32 a = 1 [(dccl.field).min=0,
                           (dccl.field).max=0xFF];
}

message TestMessageB
{
    option (dccl.msg).id = 128;
    option (dccl.msg).max_bytes = 2;
    option (dccl.msg).codec_version = 4;
  
    required uint32 b = 1 [(dccl.field).min=0,
                           (dccl.field).max=0xFF];
}

