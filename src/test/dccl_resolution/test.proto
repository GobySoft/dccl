// Copyright 2013-2023:
//   GobySoft, LLC (2013-)
//   Massachusetts Institute of Technology (2007-2014)
//   Community contributors (see AUTHORS file)
// File authors:
//   Davide Fenucci <davfen@noc.ac.uk>
//   Toby Schneider <toby@gobysoft.org>
//
//
// This file is part of the Dynamic Compact Control Language Library
// ("DCCL").
//
// DCCL is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 2.1 of the License, or
// (at your option) any later version.
//
// DCCL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with DCCL.  If not, see <http://www.gnu.org/licenses/>.
syntax = "proto2";

import "dccl/option_extensions.proto";
package dccl.test;

message NumericMsg
{
    option (dccl.msg).id = 10;
    option (dccl.msg).max_bytes = 32;
    option (dccl.msg).codec_version = 4;

    optional double a = 1 [
        (dccl.field).max = 180,
        (dccl.field).min = -180,
        (dccl.field).precision = 12,
        (dccl.field).in_head = true
    ];

    optional double b = 2 [
        (dccl.field).max = 18,
        (dccl.field).min = -18,
        (dccl.field).resolution = 0.0001
    ];

    // max is 2^64 rounded to 1e5
    required uint64 u1 = 3 [
        (dccl.field).max = 18446744073709500000,
        (dccl.field).min = 0,
        (dccl.field).precision = -5
    ];

    // max is 2^64 rounded to 1e5
    required uint64 u2 = 4 [
        (dccl.field).max = 18446744073709500000,
        (dccl.field).min = 0,
        (dccl.field).resolution = 100000
    ];

    // resolution != 10^N
    required double u3 = 5 [
        (dccl.field).max = 15.5,
        (dccl.field).min = 5.5,
        (dccl.field).resolution = 0.5
    ];

    // resolution default
    required double u4 = 6 [(dccl.field).max = 20.0, (dccl.field).min = 0.0];

    // weird resolution
    required double u5 = 7 [
        (dccl.field).max = 3.6,
        (dccl.field).min = 1.44,
        (dccl.field).resolution = 0.12
    ];

    // old precision field did not require min and max to be a multiple of resolution
    required int32 u6 = 8 [
        (dccl.field).min = 0,
        (dccl.field).max = 25599,
        (dccl.field).precision = -2
    ];
}

message NegativeResolutionNumericMsg  // Invalid resolution
{
    option (dccl.msg).id = 10;
    option (dccl.msg).max_bytes = 32;
    option (dccl.msg).codec_version = 4;

    optional double a = 1 [
        (dccl.field).min = -20,
        (dccl.field).max = 20,
        (dccl.field).resolution = -0.5
    ];

    optional int32 b = 2 [
        (dccl.field).min = -500000,
        (dccl.field).max = 500000,
        (dccl.field).precision = -3
    ];
}

message BothResolutionAndPrecisionSetNumericMsg
{
    option (dccl.msg).id = 11;
    option (dccl.msg).max_bytes = 32;
    option (dccl.msg).codec_version = 4;

    optional double a = 1 [
        (dccl.field).max = 180,
        (dccl.field).min = -180,
        (dccl.field).precision = 1,
        (dccl.field).resolution = 0.1
    ];
}

message TooBigNumericMsg
{
    option (dccl.msg).id = 11;
    option (dccl.msg).max_bytes = 32;
    option (dccl.msg).codec_version = 4;

    optional double a = 1 [
        (dccl.field).max = 180,
        (dccl.field).min = -180,
        (dccl.field).resolution = 1e-15
    ];
}

message MinNotMultipleOfResolution
{
    option (dccl.msg).id = 11;
    option (dccl.msg).max_bytes = 32;
    option (dccl.msg).codec_version = 4;

    required double a = 1 [
        (dccl.field).max = 3.6,
        (dccl.field).min = 1.5,
        (dccl.field).resolution = 0.2
    ];
}

message MaxNotMultipleOfResolution
{
    option (dccl.msg).id = 11;
    option (dccl.msg).max_bytes = 32;
    option (dccl.msg).codec_version = 4;

    required double a = 1 [
        (dccl.field).max = 3.5,
        (dccl.field).min = 1.4,
        (dccl.field).resolution = 0.2
    ];
}
