syntax = "proto2";

import "dccl/option_extensions.proto";

package dccl.test;

message TestMsg
{
    option (dccl.msg) = {
        id: 2,
        max_bytes: 512,
        codec_version: 3
    };

    //    enum State
    //    {
    //        STATE_1 = 1;
    //        STATE_2 = 2;
    //        STATE_3 = 3;
    //    }

    required int32 state = 1 [(dccl.field) = { min: 1 max: 3 }];

    optional int32 a = 2 [(dccl.field) = {
        min: 0
        max: 200
        dynamic_conditions { required_if: "print(serpent.block(this)); return this.state == 1" }
    }];

    optional int32 b = 3 [(dccl.field) = {
        min: 0
        max: 300
        dynamic_conditions { required_if: "print(serpent.block(this)); return this.state == 2" }
    }];

    optional int32 c = 4 [(dccl.field) = {
        min: 0
        max: 400
        dynamic_conditions { required_if: "print(serpent.block(this)); return this.state == 3" }
    }];
}
